apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  annotations:
    checksum/configMapAC: {{ include (print $.Template.BasePath "/kafka-connect-job-to-send-ac-user-event-to-s3-cm.yaml") . | sha256sum }}
    checksum/configMapHM: {{ include (print $.Template.BasePath "/kafka-connect-job-to-send-health-metrics-to-s3-cm.yaml") . | sha256sum }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  replicas: {{ .Values.kafkaConnect.replicaCount }}
  template:
    metadata:
      annotations:
        app: prims-lts
        prometheus.io/scrape: "true"
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: {{ .Values.kafkaConnect.restartPolicy | quote }}
      imagePullSecrets:
      - name: {{ .Values.kafkaConnect.imageSecretName | quote }}
      containers:
      - image: yagni/docker-jmx-exporter
        imagePullPolicy: Always
        name: jmx-exporter
        ports:
        - containerPort: 9138
          protocol: TCP
        {{- with .Values.jmxExporter.resources}}
        resources:
{{ toYaml . | indent 10 }}
        {{- end}}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /jmx_prometheus
          name: jmx-config-file
          readOnly: true
      - image: {{ .Values.kafkaConnect.image | quote }}
        imagePullPolicy: {{ .Values.kafkaConnect.imagePullPolicy | default "Always" | quote }}
        {{- with .Values.kafkaConnect.resources}}
        resources:
{{ toYaml . | indent 10 }}
        {{- end}}
        name: prism-lts
        volumeMounts:
        - mountPath: /root/.aws
          name: aws-s3-creds
        env:
        - name: KAFKA_HEAP_OPTS
          value: {{ .Values.kafkaConnect.heapOpts | quote }}
        - name: EXTRA_ARGS
          value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1234 -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false"
        - name: CONNECT_LOG4J_ROOT_LEVEL
          value: "INFO"
        - name: CONNECT_GROUP_ID
          value: "s3-worker-group-03"
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: "connect-offsets"
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: "connect-configs"
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: "connect-status"
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: {{ .Values.kafkaConnect.kafkaServers | quote }}
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: {{ .Values.kafkaConnect.connectInternalKeyConverter | quote }}
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: {{ .Values.kafkaConnect.connectInternalValueConverter | quote }}
        - name: CONNECT_KEY_CONVERTER
          value: {{ .Values.kafkaConnect.connectKeyConverter | quote }}
        - name: CONNECT_VALUE_CONVERTER
          value: {{ .Values.kafkaConnect.connectValueConverter | quote }}
        - name: CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
          value: {{ .Values.kafkaConnect.connectKeyConverterSchemaRegistryUrl | quote }}
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: {{ .Values.kafkaConnect.connectValueConverterSchemaRegistryUrl | quote }}
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: {{ template "name" . }}
        - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
          value: {{ .Values.kafkaConnect.replicationFactor | default "3" | quote }}
        - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
          value: {{ .Values.kafkaConnect.replicationFactor | default "3" | quote }}
        - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
          value: {{ .Values.kafkaConnect.replicationFactor | default "3" | quote }}
        - name: CONNECT_OFFSET_STORAGE_PARTITIONS
          value: {{ .Values.kafkaConnect.partitions | default "12" | quote }}
        - name: CONNECT_STATUS_STORAGE_PARTITIONS
          value: {{ .Values.kafkaConnect.partitions | default "12" | quote }}
        - name: CONNECT_PLUGIN_PATH
          value: "/usr/share/java,/usr/local/share/kafka/plugins"
        ports:
        - containerPort: 8083
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 8083
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
#        command: ["/bin/sh"]
#        args: ["-c", "while true; do sleep 10; done"]
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ template "fullname" . }}-jmx-config
        name: jmx-config-file
      - secret:
          defaultMode: 420
          secretName: {{ .Values.kafkaConnect.s3SecretName | quote }}
        name: aws-s3-creds
